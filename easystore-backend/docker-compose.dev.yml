services:
  app:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    command: npm run dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL_POSTGRES=${DATABASE_URL_POSTGRES}
      - DATABASE_URL_MONGO=${DATABASE_URL_MONGODB}
      - LOGSTASH_HOST=${LOGSTASH_HOST}
      - LOGSTASH_PORT=${LOGSTASH_PORT}
    depends_on:
      - postgres
      - mongo

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:7
    restart: always
    ports:
      - "${MONGODB_PORT}:27017" 
    volumes:
      - mongo_data:/data/db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/usr/share/logstash/logs
    depends_on:
      - app

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

volumes:
  postgres_data:
  mongo_data:
  esdata:
  