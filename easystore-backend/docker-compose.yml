services:
  app:
    build: .
    ports:
      - '3000:3000'
    volumes:
      - .:/app
    command: npm run start
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL_POSTGRES=${DATABASE_URL_POSTGRES}
      - DATABASE_URL_MONGO=${DATABASE_URL_MONGODB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - postgres
      - mongo
      - redis
    networks:
      - ecommerce-network

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce-network

  mongo:
    image: mongo:7
    restart: always
    ports:
      - '${MONGODB_PORT}:27017'
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - ecommerce-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.1
    container_name: logstash
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logs:/usr/share/logstash/logs
    depends_on:
      - app
    networks:
      - ecommerce-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.1
    container_name: kibana
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    networks:
      - ecommerce-network

  redis:
    image: redis:7-alpine
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - ecommerce-network

volumes:
  postgres_data:
  mongo_data:
  esdata:

networks:
  ecommerce-network:
    driver: bridge
