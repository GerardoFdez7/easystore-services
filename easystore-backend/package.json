{
  "name": "easystore-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "generate": "npm run generate:postgre && npm run generate:mongo",
    "generate:postgre": "prisma generate --schema src/infrastructure/database/postgre/postgre.schema.prisma",
    "generate:mongo": "prisma generate --schema src/infrastructure/database/mongo/mongo.schema.prisma",
    "wait-for-services": "wait-port ${REDIS_HOST}:${REDIS_PORT} --timeout=30000 && wait-port ${KAFKA_BROKERS} --timeout=30000",
    "prestart": "npm run wait-for-services",
    "start": "npm run prestart && cross-env NODE_ENV=production node dist/main.js",
    "dev": "cross-env NODE_ENV=development nest start --watch",
    "start:debug": "nest start --debug --watch",
    "lint": "eslint .",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:kafka": "jest --config ./test/jest-e2e.json --forceExit ./test/integration/kafka",
    "test:kafka:full": "npm run docker:kafka:up && sleep 10 && npm run kafka:producer-test && npm run test:kafka && npm run docker:kafka:down",
    "docker": "cross-env HUSKY=0 docker-compose -f docker-compose.yml up -d",
    "docker:dev": "cross-env HUSKY=0 docker-compose -f docker-compose.dev.yml up",
    "docker:kafka:up": "docker-compose up -d zookeeper kafka schema-registry kafdrop",
    "docker:kafka:down": "docker-compose stop zookeeper kafka schema-registry kafdrop",
    "docker:kafka:logs": "docker-compose logs -f kafka schema-registry kafdrop",
    "studio:postgre": "cross-env PRISMA_HIDE_UPDATE_MESSAGE=1 npx prisma studio --schema src/infrastructure/database/postgre/postgre.schema.prisma",
    "studio:mongo": "cross-env PRISMA_HIDE_UPDATE_MESSAGE=1 npx prisma studio --schema src/infrastructure/database/mongo/mongo.schema.prisma",
    "postgre": "cross-env PRISMA_HIDE_UPDATE_MESSAGE=1 npx prisma migrate dev --schema src/infrastructure/database/postgre/postgre.schema.prisma",
    "dbpush:postgre": "cross-env PRISMA_HIDE_UPDATE_MESSAGE=1 npx prisma db push --schema src/infrastructure/database/postgre/postgre.schema.prisma",
    "dbpush:mongo": "cross-env PRISMA_HIDE_UPDATE_MESSAGE=1 npx prisma db push --schema src/infrastructure/database/mongo/mongo.schema.prisma",
    "prepare": "cd .. && husky install easystore-backend/.husky",
    "kafka:producer-test": "ts-node ./tools/kafka-producer-test.ts",
    "kafka:consumer-test": "ts-node ./tools/kafka-consumer-test.ts"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.17.1",
    "@nestjs/apollo": "^13.0.4",
    "@nestjs/common": "^11.0.20",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.12",
    "@nestjs/cqrs": "^11.0.3",
    "@nestjs/elasticsearch": "^11.0.0",
    "@nestjs/graphql": "^13.0.4",
    "@nestjs/microservices": "^11.0.20",
    "@nestjs/platform-express": "^11.0.20",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/terminus": "^11.0.0",
    "@prisma/client": "^6.5.0",
    "apollo-server-express": "^3.13.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "compression": "^1.8.0",
    "graphql": "^16.10.0",
    "graphql-voyager": "^2.1.0",
    "helmet": "^8.1.0",
    "ioredis": "^5.6.1",
    "jsonwebtoken": "^9.0.2",
    "kafkajs": "^2.2.4",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "uuid": "^11.1.0",
    "wait-port": "^1.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@eslint/js": "^9.0.0",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^11.0.12",
    "@types/compression": "^1.7.5",
    "@types/express": "^5.0.0",
    "@types/helmet": "^0.0.48",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@types/winston": "^2.4.4",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "cross-env": "^7.0.3",
    "eslint": "^9",
    "eslint-config-prettier": "^10.1.1",
    "eslint-plugin-prettier": "^5.2.5",
    "husky": "^8.0.0",
    "jest": "^29.5.0",
    "lint-staged": "^15.5.0",
    "prettier": "^3.5.3",
    "prettier-plugin-prisma": "^5.0.0",
    "prisma": "^6.5.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
